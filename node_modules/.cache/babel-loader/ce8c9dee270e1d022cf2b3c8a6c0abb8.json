{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/Lin/Documents/GitHub/social-network-frontend/src/user/EditProfile.js\";\nimport React, { Component } from \"react\";\nimport { isAuthenticated } from \"../auth\";\nimport { read, update } from \"./apiUser\";\nimport { Redirect } from 'react-router-dom';\n\nclass EditProfile extends Component {\n  constructor() {\n    super();\n\n    this.init = userId => {\n      const token = isAuthenticated().token;\n      read(userId, token).then(data => {\n        if (data.error) {\n          this.setState({\n            redirectToProfile: true\n          });\n        } else {\n          this.setState({\n            id: data._id,\n            name: data.name,\n            email: data.email\n          });\n        }\n      });\n    };\n\n    this.isValid = () => {\n      const {\n        name,\n        email,\n        password\n      } = this.state;\n\n      if (name.length === 0) {\n        this.setState({\n          error: \"Name is required\"\n        });\n        return false;\n      }\n\n      if (!/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email)) {\n        this.setState({\n          error: \"A valid Email is required\"\n        });\n        return false;\n      }\n\n      if (password.length >= 1 && password.length <= 5) {\n        this.setState({\n          error: \"Password must be at least 6 characters long\"\n        });\n        return false;\n      }\n\n      return true;\n    };\n\n    this.handleChange = name => event => {\n      const value = name === 'photo' ? event.target.files[0] : event.target.value;\n      const fileSize = name === 'photo' ? event.target.files[0].size : 0;\n      this.userData.set(name, value);\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.clickSubmit = event => {\n      event.preventDefault();\n      this.setState({\n        loading: true\n      });\n\n      if (this.isValid()) {\n        const userId = this.props.match.params.userId;\n        const token = isAuthenticated().token;\n        update(userId, token, this.userData).then(data => {\n          if (data.error) {\n            this.setState({\n              error: data.error\n            });\n          } else {\n            this.setState({\n              redirectToProfile: true\n            });\n          }\n        });\n      }\n    };\n\n    this.signupForm = (name, email, password) => /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"text-muted\",\n          children: \"Profile Photo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: this.handleChange(\"photo\"),\n          type: \"file\",\n          accept: \"image/*\",\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"text-muted\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: this.handleChange(\"name\"),\n          type: \"text\",\n          className: \"form-control\",\n          value: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"text-muted\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: this.handleChange(\"email\"),\n          type: \"email\",\n          className: \"form-control\",\n          value: email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"text-muted\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: this.handleChange(\"password\"),\n          type: \"password\",\n          className: \"form-control\",\n          value: password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.clickSubmit,\n        className: \"btn btn-raised btn-primary\",\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this);\n\n    this.state = {\n      id: \"\",\n      name: \"\",\n      password: \"\",\n      email: \"\",\n      redirectToProfile: false,\n      error: \"\",\n      fileSize: 0,\n      loading: false\n    };\n  }\n\n  componentDidMount() {\n    this.userData = new FormData();\n    const userId = this.props.match.params.userId;\n    this.init(userId);\n  }\n\n  render() {\n    const {\n      id,\n      name,\n      email,\n      password,\n      redirectToProfile,\n      error,\n      loading\n    } = this.state;\n\n    if (redirectToProfile) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: `/user/${id}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 20\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"mt-5 mb-5\",\n        children: \"Edit Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger\",\n        style: {\n          display: error ? \"\" : \"none\"\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"jumbotron text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 21\n      }, this) : \"\", this.signupForm(name, email, password)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default EditProfile;","map":{"version":3,"sources":["/Users/Lin/Documents/GitHub/social-network-frontend/src/user/EditProfile.js"],"names":["React","Component","isAuthenticated","read","update","Redirect","EditProfile","constructor","init","userId","token","then","data","error","setState","redirectToProfile","id","_id","name","email","isValid","password","state","length","test","handleChange","event","value","target","files","fileSize","size","userData","set","clickSubmit","preventDefault","loading","props","match","params","signupForm","componentDidMount","FormData","render","display"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport {isAuthenticated} from \"../auth\";\nimport {read, update} from \"./apiUser\";\nimport {Redirect} from 'react-router-dom';\n\nclass EditProfile extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            id:\"\",\n            name:\"\",\n            password:\"\",\n            email:\"\",\n            redirectToProfile:false,\n            error:\"\",\n            fileSize:0,\n            loading:false\n        }\n    }\n\n    init = userId => {\n        const token = isAuthenticated().token\n        read(userId, token)\n            .then(data => {\n                if (data.error) {\n                    this.setState({redirectToProfile:true})\n                } else {\n                    this.setState({id:data._id, name:data.name, email:data.email});\n                }\n            })\n    }\n\n    componentDidMount() {\n        this.userData = new FormData()\n        const userId = this.props.match.params.userId\n        this.init(userId);\n    }\n\n    isValid = () => {\n        const {name, email,password} = this.state\n        if (name.length === 0) {\n            this.setState({error:\"Name is required\"})\n            return false\n        }\n        if (!/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(email)) {\n            this.setState({error:\"A valid Email is required\"})\n            return false\n        }\n        if (password.length >= 1 && password.length <= 5) {\n            this.setState({error: \"Password must be at least 6 characters long\"})\n            return false\n        }\n        return true;\n    }\n\n    handleChange = (name) => (event) => {\n        const value = name === 'photo' ? event.target.files[0]: event.target.value\n        const fileSize = name === 'photo' ? event.target.files[0].size: 0\n        this.userData.set(name, value)\n        this.setState({[name]: value})\n    };\n\n    clickSubmit = event => {\n        event.preventDefault();\n        this.setState({loading:true})\n        if (this.isValid()) {\n            const userId = this.props.match.params.userId\n            const token = isAuthenticated().token\n            update(userId, token, this.userData)\n                .then(data => {\n                    if (data.error) {\n                        this.setState({error: data.error});\n                    } else {\n                        this.setState({\n                            redirectToProfile:true\n                        })\n                    }\n                })\n        }\n    }\n\n    signupForm = (name, email, password) => (\n        <form>\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Profile Photo</label>\n                <input onChange={this.handleChange(\"photo\")}\n                       type=\"file\"\n                       accept=\"image/*\"\n                       className=\"form-control\"\n                />\n            </div>\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Name</label>\n                <input onChange={this.handleChange(\"name\")}\n                       type=\"text\"\n                       className=\"form-control\"\n                       value={name}\n                />\n            </div>\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Email</label>\n                <input onChange={this.handleChange(\"email\")}\n                       type=\"email\"\n                       className=\"form-control\"\n                       value={email}\n                />\n            </div>\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Password</label>\n                <input onChange={this.handleChange(\"password\")}\n                       type=\"password\"\n                       className=\"form-control\"\n                       value={password}\n                />\n            </div>\n            <button onClick={this.clickSubmit} className=\"btn btn-raised btn-primary\">\n                Update\n            </button>\n        </form>\n    )\n\n    render() {\n        const {id,\n            name,\n            email,\n            password,\n            redirectToProfile,\n            error,\n            loading\n        } = this.state\n        if (redirectToProfile) {\n            return <Redirect to={`/user/${id}`} />\n        }\n        return (\n            <div className=\"container\">\n                <h2 className=\"mt-5 mb-5\">Edit Profile</h2>\n                <div className=\"alert alert-danger\"\n                     style={{display:error ? \"\" : \"none\"}}\n                >\n                    {error}\n                </div>\n\n                {loading ? (\n                    <div className=\"jumbotron text-center\">\n                        <h2>Loading...</h2>\n                    </div>\n                ): (\n                    \"\"\n                )}\n\n                {this.signupForm(name,email,password)}\n            </div>\n        )\n    }\n}\n\nexport default EditProfile;"]},"metadata":{},"sourceType":"module"}