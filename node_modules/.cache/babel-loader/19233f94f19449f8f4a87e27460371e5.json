{"ast":null,"code":"export const read = (userId, token) => {\n  return fetch(`${process.env.REACT_APP_API_URL}/user/${userId}`, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const list = () => {\n  return fetch(`${process.env.REACT_APP_API_URL}/users`, {\n    method: \"GET\"\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const remove = (userId, token) => {\n  return fetch(`${process.env.REACT_APP_API_URL}/user/${userId}`, {\n    method: \"DELETE\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const update = (userId, token, user) => {\n  console.log(\"USER DATA UPDATE: \", user);\n  return fetch(`${process.env.REACT_APP_API_URL}/user/${userId}`, {\n    method: \"PUT\",\n    headers: {\n      Accept: \"application/json\",\n      Authorization: `Bearer ${token}`\n    },\n    body: user\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const updateUser = (user, next) => {\n  if (typeof window !== \"undefined\") {\n    if (localStorage.getItem(\"jwt\")) {\n      let auth = JSON.parse(localStorage.getItem(\"jwt\"));\n      auth.user = user;\n      localStorage.setItem(\"jwt\", JSON.stringify(auth));\n      next();\n    }\n  }\n};","map":{"version":3,"sources":["/Users/Lin/Documents/GitHub/social-network-frontend/src/user/apiUser.js"],"names":["read","userId","token","fetch","process","env","REACT_APP_API_URL","method","headers","Accept","Authorization","then","response","json","catch","err","console","log","list","remove","update","user","body","updateUser","next","window","localStorage","getItem","auth","JSON","parse","setItem","stringify"],"mappings":"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","sourcesContent":["export const read = (userId, token) => {\n    return fetch(`${process.env.REACT_APP_API_URL}/user/${userId}`, {\n        method:\"GET\",\n        headers:{\n            Accept:\"application/json\",\n            \"Content-Type\":\"application/json\",\n            Authorization:`Bearer ${token}`}\n    }).then(response => {\n        return response.json()\n    }).catch(err => console.log(err))\n}\n\nexport const list = () => {\n    return fetch(`${process.env.REACT_APP_API_URL}/users`, {\n        method: \"GET\",\n    }).then(response => {\n        return response.json()\n    }).catch(err => console.log(err))\n}\n\nexport  const remove = (userId, token) => {\n    return fetch(`${process.env.REACT_APP_API_URL}/user/${userId}`, {\n        method:\"DELETE\",\n        headers:{\n            Accept:\"application/json\",\n            \"Content-Type\":\"application/json\",\n            Authorization:`Bearer ${token}`}\n    }).then(response => {\n        return response.json()\n    }).catch(err => console.log(err))\n}\n\nexport const update = (userId, token,user) => {\n    console.log(\"USER DATA UPDATE: \", user)\n    return fetch(`${process.env.REACT_APP_API_URL}/user/${userId}`, {\n        method:\"PUT\",\n        headers:{\n            Accept:\"application/json\",\n            Authorization:`Bearer ${token}`\n        },\n        body:user\n    }).then(response => {\n        return response.json()\n    }).catch(err => console.log(err))\n}\n\nexport const updateUser = (user, next) => {\n    if (typeof window !== \"undefined\") {\n        if (localStorage.getItem(\"jwt\")) {\n            let auth = JSON.parse(localStorage.getItem(\"jwt\"));\n            auth.user = user;\n            localStorage.setItem(\"jwt\", JSON.stringify(auth));\n            next();\n        }\n    }\n};"]},"metadata":{},"sourceType":"module"}